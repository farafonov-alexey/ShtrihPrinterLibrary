apply plugin: 'idea'
apply plugin: 'com.android.library'

clean.doFirst {
    delete "${rootDir}/../../dist/zip/android"
}

android {
    compileSdkVersion 25

    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 25
        versionCode 1
        versionName "$version"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    
    sourceSets {
        main {
            java {
                srcDirs = ["${projectDir}/src", "${projectDir}/../../Core/src"]
            }
            res {
                srcDirs = ["${projectDir}/res"]
            }
            manifest {
                srcFile "${projectDir}/AndroidManifest.xml"
            }
            assets {
                srcDirs = ["${projectDir}/assets"]
            }
        }
        test {
            java {
              srcDirs = [ "${projectDir}/test/" ]
            }
            res {
                srcDirs = ["${projectDir}/test/res"]
            }
        }
        androidTest {
            java {
              srcDirs = [ "${projectDir}/androidTest/" ]
            }
            res {
                srcDirs = ["${projectDir}/androidTest/res"]
            }
            assets {
                srcDirs = ["${projectDir}/androidTest/assets"]
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    libraryVariants.all { variant ->
        def name = variant.buildType.name
        if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
            return; // Skip debug builds.
        }
        def task = project.tasks.create "jar${name.capitalize()}", Jar
        task.dependsOn variant.javaCompile
        task.from variant.javaCompile.destinationDir
        task.exclude '**/BuildConfig.class'
        task.exclude '**/R.class'
        task.exclude '**/R$*.class'
        artifacts.add('archives', task);
    }
}

repositories {
    jcenter()
}

dependencies {
    compile 'org.jetbrains:annotations-java5:15.0'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'com.github.tony19:logback-android-core:1.1.1-6'
    compile('com.github.tony19:logback-android-classic:1.1.1-6') {
        exclude group: 'com.google.android', module: 'android'
    }
    compile files('lib/actionbarsherlock-4.4.0.jar')
    compile files('lib/d2xx.jar')
    compile files('lib/hamcrest-core-1.3.jar')
    compile files('lib/jbarcode-0.2.8.jar')
    compile files('lib/jpos113.jar')
    compile files('lib/log4j-1.2.16.jar')
    compile files('lib/viewpagerindicator.jar')
    compile files('lib/xerces4android.jar')
    compile files('lib/zxing-3.2.2.jar')
    compile files('lib/zxing-core-3.2.2-javadoc.jar')
    compile 'com.google.guava:guava:19.0'
}


